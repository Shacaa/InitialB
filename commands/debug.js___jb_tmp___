/*
 * Debug command.
 * For personal use to fix stuff, mainly json's.
 */
 
 const fs = require('fs');
const globals = require('./globals.js');
const musicShare = require('./musicshare');
const musicShareDb = './files/musicShareDb.json'
const botStorage = './files/botStorage.json';

exports.run = (client, reddit, spotify, message, args) => {
	if(message.author.id !== '116758923603738625'){
		return false;
	}
	
	if(args[0] === '1'){
		debug(args[1], args[2]);
	}else if(args[0] === '2'){
		debug2(message, args[1], args[2], args[3]);
	}else if(args[0] === '3'){
		//debug3(message);
	}else if(args[0] === '4'){
		debug4();
	}
	
//////////////////FUNCTIONS/////////////////////
	
	function debug(idtoremove, where){
		globals.editJSON(musicShareDb, function(id, guildid, data){
			var obj = JSON.parse(data);
			if(obj.ids[id]){
				delete obj.ids[id];
				console.log('se borro id de ids globales');
			}
			var guild = obj.servers[guildid];
			var users = Object.keys(guild);
			users.splice(users.indexOf('ids'), 1);
			if(guild.ids[id]){
				delete guild.ids[id];
				console.log('borrado de ids del guild');
			}
			for(var i = 0; i < users.length; i++){
				if(guild[users[i]].includes(id)){
					console.log('--------\nusuario: '+users[i]);
					console.log('musica:\n '+guild[users[i]]);
					var pos = guild[users[i]].indexOf(id);
					console.log(guild[users[i]][pos]);
					guild[users[i]].splice(pos, 1);
					console.log('borrado de usuario');
				}
			}
			return JSON.stringify(obj);
		},[idtoremove, where]);
	}


	function debug2(message, idtoadd, authorId, guildId){
		var toSave = [[idtoadd, authorId, guildId]];
		globals.editJSON(musicShareDb, saveEntryMusicDb, [message, toSave, false]);
	}
	
	function debug3(msg){
		fs.readFile(musicShareDb, 'utf8', function(err, data){
			if(err){console.error(err);}else{
				var obj = JSON.parse(data);
				var guild = obj.servers['374899000911855627'];
				var links = Object.keys(guild.ids);
				console.log(links.length);
				var mensajes = [''];
				for(var i = 0; i < links.length;i++){
					if(links[i].startsWith('album') || links[i].startsWith('track')){
						continue;
					}
					let videoLink = 'https://www.youtube.com/watch?v='+links[i]+'\n';
					if(mensajes[mensajes.length-1].length + videoLink.length >= 2000){
						mensajes.push('');
					}
					mensajes[mensajes.length-1] += videoLink;
				}
				
				for(var i = 0; i < mensajes.length; i++){
					globals.sendDm(client, '276761018598686720', mensajes[i]);
				}
				globals.sendDm(client, '276761018598686720', '----------\nTotal amount of links: '+links.length.toString()+' (including spotify ones)\n');
			}
		});
	}

	function debug4(){
		// globals.editJSON(botStorage, function(data){
		// 	let obj = JSON.parse(data);
		// 	obj['isOnline'] = true;
		// 	message.channel.send('isOnline created');
		// 	console.log(obj.isOnline);
		// 	return JSON.stringify(obj);
		// }, []);
		fs.readFile(botStorage, 'utf8', function(err, data){
			if(err){console.error(err);}else{
				let obj = JSON.parse(data);
				console.log(obj.isOnline);
			}
		});
	}
	
};
